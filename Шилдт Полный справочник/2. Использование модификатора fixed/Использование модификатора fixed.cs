/* При работе с указателями зачастую используется модификатор fixed. Он
предотвращает удаление управляемых переменных системой сбора мусора. Это необходимо
в том случае, если, например, указатель ссылается на какое-нибудь поле в объекте класса.
Поскольку указатель “ничего не знает” о действиях “сборщика мусора”, то в случае
удаления такого объекта этот указатель будет указывать на неверный объект. Формат
применения модификатора fixed таков:
fixed(type* p = &var) {
// Использование зафиксированного объекта. }*/

// Демонстрация использования модификатора fixed.
using System;
class Test
{
    public int num;
    public Test(int i)
    {
        num = i;
    }
}
class FixedCode
{
    // Отмечаем метод Main() как опасный.
    unsafe public static void Main()
    {
        Test o = new Test(19);
        fixed (int* p = &o.num)
        { // Используем модификатор fixed,
          // чтобы поместить адрес поля o.num в р.
            Console.WriteLine("Начальное значение поля o.num равно " + *p);
            *p = 10; // Присваиваем число 10 переменной count
                     // через указатель р.
            Console.WriteLine("Новое значение поля o.num равно " + *p);
        }
    }
}

